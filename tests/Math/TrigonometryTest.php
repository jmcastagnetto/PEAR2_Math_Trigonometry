<?php
namespace Math;


require_once '../../src/Math/Trigonometry.php';

/**
 * Test class for Trigonometry.
 * Generated by PHPUnit on 2011-03-26 at 21:35:31.
 */
class TrigonometryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Tests of sine
     */
    public function testSin()
    {
        $sin1 = Trigonometry::sin(M_PI_4);
        $sin2 = Trigonometry::sin(1E-15);
        $this->assertEquals(0.70710678118655, $sin1, '', 1E-8);
        $this->assertEquals(0.0, $sin2, '', 1E-8);
    }

    /**
     * Test of cosine
     */
    public function testCos()
    {
        $cos1 = Trigonometry::cos(M_PI_4);
        $cos2 = Trigonometry::cos(1E-15);
        $this->assertEquals(0.70710678118655, $cos1, '', 1E-8);
        $this->assertEquals(1.0, $cos2, '', 1E-8);
    }

    /**
     * Test of tangent
     */
    public function testTan()
    {
        $tan1 = Trigonometry::tan(M_PI_4);
        $tan2 = Trigonometry::tan(1E-15);
        $this->assertEquals(1.0, $tan1, '', 1E-8);
        $this->assertEquals(0.0, $tan2, '', 1E-8);
    }

    /**
     * Test of secant
     */
    public function testSec()
    {
        $sec = Trigonometry::sec(2*M_PI/3);
        $this->assertEquals(-2.0, $sec, '', 1E-8);
    }

    /**
     * Test of cosecant
     */
    public function testCsc()
    {
        $csc = Trigonometry::csc(2*M_PI/3);
        $this->assertEquals(1.1547005383793, $csc, '', 1E-8);
    }

    /**
     * Test of cotangent
     */
    public function testCot()
    {

        $cot = Trigonometry::cot(M_PI/3);
        $this->assertEquals(0.57735026918963, $cot, '', 1E-8);
    }

    /**
     * Test of arcsine
     */
    public function testAsin()
    {
        $asin = Trigonometry::asin(1.0);
        $this->assertEquals(M_PI_2, $asin, '', 1E-8);
    }

    /**
     * Test of arccosine
     */
    public function testAcos()
    {
        $acos = Trigonometry::acos(0.0);
        $this->assertEquals(M_PI_2, $acos, '', 1E-8);
    }

    /**
     * Test of arctangent
     */
    public function testAtan()
    {
        $atan = Trigonometry::atan(1.0);
        $this->assertEquals(M_PI_4, $atan, '', 1E-8);
    }

    /**
     * @todo Implement testAtan2().
     */
    public function testAtan2()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAsec().
     */
    public function testAsec()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAcsc().
     */
    public function testAcsc()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAcot().
     */
    public function testAcot()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSinh().
     */
    public function testSinh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testCosh().
     */
    public function testCosh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testTanh().
     */
    public function testTanh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testSech().
     */
    public function testSech()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testCsch().
     */
    public function testCsch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testCoth().
     */
    public function testCoth()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAsinh().
     */
    public function testAsinh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAcosh().
     */
    public function testAcosh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAtanh().
     */
    public function testAtanh()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAsech().
     */
    public function testAsech()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAcsch().
     */
    public function testAcsch()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testAcoth().
     */
    public function testAcoth()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
